version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fitness_ai
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/fitness_ai?schema=public'
      REDIS_URL: 'redis://redis:6379'
      JWT_SECRET: '${JWT_SECRET:-your-super-secret-key-change-in-production}'
      JWT_EXPIRY: '${JWT_EXPIRY:-24h}'
      OPENAI_API_KEY: '${OPENAI_API_KEY}'
      PORT: 3000
      GRPC_PORT: 50051
      NODE_ENV: '${NODE_ENV:-development}'
      LOG_LEVEL: '${LOG_LEVEL:-info}'
    ports:
      - '3000:3000'
      - '50051:50051'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && npm start"

  # Web Client (uncomment when implemented)
  # web:
  #   build:
  #     context: .
  #     dockerfile: web.Dockerfile
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://server:3000
  #     NODE_ENV: "${NODE_ENV:-production}"
  #   ports:
  #     - "80:3000"
  #   depends_on:
  #     - server

  # For development only - Prisma Studio for database management
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/fitness_ai?schema=public'
    ports:
      - '5555:5555'
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma studio --host 0.0.0.0
    profiles:
      - dev

volumes:
  postgres-data:
  redis-data:
